SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
CMAKE_MINIMUM_REQUIRED(VERSION 3.15)
PROJECT(qrencode VERSION 1.0.0)

MESSAGE(STATUS "PROJECT INFO:")
MESSAGE(STATUS "    CMAKE_PROJECT_NAME:    ${CMAKE_PROJECT_NAME}")
MESSAGE(STATUS "    CMAKE_BUILD_TYPE:      ${CMAKE_BUILD_TYPE}")
MESSAGE(STATUS "    CMAKE_SOURCE_DIR:      ${CMAKE_SOURCE_DIR}")
MESSAGE(STATUS "    CMAKE_PROJECT_VERSION: ${CMAKE_PROJECT_VERSION}")

MESSAGE(STATUS "SYSTEM INFO:")
MESSAGE(STATUS "    CMAKE_SYSTEM_NAME:      ${CMAKE_SYSTEM_NAME}")
MESSAGE(STATUS "    CMAKE_SYSTEM_PROCESSOR: ${CMAKE_SYSTEM_PROCESSOR}")
MESSAGE(STATUS "    CMAKE_SIZEOF_VOID_P:    ${CMAKE_SIZEOF_VOID_P}")

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY           "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY           "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY           "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG     "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE   "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG     "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE   "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG     "${CMAKE_BINARY_DIR}/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE   "${CMAKE_BINARY_DIR}/bin")

SET(CMAKE_INSTALL_BINDIR        ${CMAKE_INSTALL_PREFIX}/bin)
SET(CMAKE_INSTALL_LIBDIR        ${CMAKE_INSTALL_PREFIX}/lib)
SET(CMAKE_INSTALL_INCLUDEDIR    ${CMAKE_INSTALL_PREFIX}/include)
SET(CMAKE_MSVC_RUNTIME_LIBRARY  "MultiThreaded$<$<CONFIG:Debug>:Debug>")

SET(ZLIB_ROOT_DIR                      "${CMAKE_SOURCE_DIR}/3rd/zlib")
SET(LIBPNG_ROOT_DIR                    "${CMAKE_SOURCE_DIR}/3rd/libpng")

IF(${CMAKE_SIZEOF_VOID_P} EQUAL 4)
    SET(LIB_DIR_SUFFIX "x86")
ELSE()
    SET(LIB_DIR_SUFFIX "x64")
ENDIF() ## Build for Windows x86 platform
###########################################

IF(MSVC)
    SET(CMAKE_C_FLAGS                  "${CMAKE_C_FLAGS}   /MP")
    SET(CMAKE_CXX_FLAGS                "${CMAKE_CXX_FLAGS} /MP")
ELSE()
    SET(CMAKE_C_FLAGS                  "${CMAKE_C_FLAGS}   -fPIC")
    SET(CMAKE_CXX_FLAGS                "${CMAKE_CXX_FLAGS} -fPIC")
    SET(CMAKE_CXX_FLAGS_DEBUG          "${CMAKE_CXX_FLAGS_DEBUG} -O0 -Wall -ggdb")
    SET(CMAKE_CXX_FLAGS_RELEASE        "${CMAKE_CXX_FLAGS_RELEASE} -s")
ENDIF()

# Add C/C++ Macros
ADD_DEFINITIONS(
    -DUNICODE
    -D_UNICODE
)

INCLUDE_DIRECTORIES(
# You can add include directory here, like:
    ${LIBPNG_ROOT_DIR}/include
    ${CMAKE_SOURCE_DIR}/include
)

# Add link directories
LINK_DIRECTORIES(
    ${ZLIB_ROOT_DIR}/lib/${LIB_DIR_SUFFIX}
    ${LIBPNG_ROOT_DIR}/lib/${LIB_DIR_SUFFIX}
# You can add link directory here, like:
#   ${CMAKE_SOURCE_DIR}/3rd/jsoncpp/lib
#   ${CMAKE_SOURCE_DIR}/3rd/jsoncpp/lib/${CMAKE_CFG_INTDIR}
)

# Add sub projects.
ADD_SUBDIRECTORY(src)
IF(${BUILD_TEST})
    ADD_SUBDIRECTORY(test)
ENDIF()

SET_TARGET_PROPERTIES(${PRJ_TARGET} PROPERTIES FOLDER "CMakePredefinedTargets")
